/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.k8s.io.api.core.v1.PersistentVolumeSource');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource');
goog.require('proto.k8s.io.api.core.v1.AzureDiskVolumeSource');
goog.require('proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.CSIPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.CinderPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.FCVolumeSource');
goog.require('proto.k8s.io.api.core.v1.FlexPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.FlockerVolumeSource');
goog.require('proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource');
goog.require('proto.k8s.io.api.core.v1.GlusterfsVolumeSource');
goog.require('proto.k8s.io.api.core.v1.HostPathVolumeSource');
goog.require('proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.LocalVolumeSource');
goog.require('proto.k8s.io.api.core.v1.NFSVolumeSource');
goog.require('proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource');
goog.require('proto.k8s.io.api.core.v1.PortworxVolumeSource');
goog.require('proto.k8s.io.api.core.v1.QuobyteVolumeSource');
goog.require('proto.k8s.io.api.core.v1.RBDPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource');
goog.require('proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.k8s.io.api.core.v1.PersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeSource';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.api.core.v1.PersistentVolumeSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    gcepersistentdisk: (f = msg.getGcepersistentdisk()) && proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.toObject(includeInstance, f),
    awselasticblockstore: (f = msg.getAwselasticblockstore()) && proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.toObject(includeInstance, f),
    hostpath: (f = msg.getHostpath()) && proto.k8s.io.api.core.v1.HostPathVolumeSource.toObject(includeInstance, f),
    glusterfs: (f = msg.getGlusterfs()) && proto.k8s.io.api.core.v1.GlusterfsVolumeSource.toObject(includeInstance, f),
    nfs: (f = msg.getNfs()) && proto.k8s.io.api.core.v1.NFSVolumeSource.toObject(includeInstance, f),
    rbd: (f = msg.getRbd()) && proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.toObject(includeInstance, f),
    iscsi: (f = msg.getIscsi()) && proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.toObject(includeInstance, f),
    cinder: (f = msg.getCinder()) && proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.toObject(includeInstance, f),
    cephfs: (f = msg.getCephfs()) && proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.toObject(includeInstance, f),
    fc: (f = msg.getFc()) && proto.k8s.io.api.core.v1.FCVolumeSource.toObject(includeInstance, f),
    flocker: (f = msg.getFlocker()) && proto.k8s.io.api.core.v1.FlockerVolumeSource.toObject(includeInstance, f),
    flexvolume: (f = msg.getFlexvolume()) && proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.toObject(includeInstance, f),
    azurefile: (f = msg.getAzurefile()) && proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.toObject(includeInstance, f),
    vspherevolume: (f = msg.getVspherevolume()) && proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.toObject(includeInstance, f),
    quobyte: (f = msg.getQuobyte()) && proto.k8s.io.api.core.v1.QuobyteVolumeSource.toObject(includeInstance, f),
    azuredisk: (f = msg.getAzuredisk()) && proto.k8s.io.api.core.v1.AzureDiskVolumeSource.toObject(includeInstance, f),
    photonpersistentdisk: (f = msg.getPhotonpersistentdisk()) && proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.toObject(includeInstance, f),
    portworxvolume: (f = msg.getPortworxvolume()) && proto.k8s.io.api.core.v1.PortworxVolumeSource.toObject(includeInstance, f),
    scaleio: (f = msg.getScaleio()) && proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.toObject(includeInstance, f),
    local: (f = msg.getLocal()) && proto.k8s.io.api.core.v1.LocalVolumeSource.toObject(includeInstance, f),
    storageos: (f = msg.getStorageos()) && proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.toObject(includeInstance, f),
    csi: (f = msg.getCsi()) && proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.api.core.v1.PersistentVolumeSource;
  return proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinaryFromReader);
      msg.setGcepersistentdisk(value);
      break;
    case 2:
      var value = new proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinaryFromReader);
      msg.setAwselasticblockstore(value);
      break;
    case 3:
      var value = new proto.k8s.io.api.core.v1.HostPathVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinaryFromReader);
      msg.setHostpath(value);
      break;
    case 4:
      var value = new proto.k8s.io.api.core.v1.GlusterfsVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.GlusterfsVolumeSource.deserializeBinaryFromReader);
      msg.setGlusterfs(value);
      break;
    case 5:
      var value = new proto.k8s.io.api.core.v1.NFSVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinaryFromReader);
      msg.setNfs(value);
      break;
    case 6:
      var value = new proto.k8s.io.api.core.v1.RBDPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setRbd(value);
      break;
    case 7:
      var value = new proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setIscsi(value);
      break;
    case 8:
      var value = new proto.k8s.io.api.core.v1.CinderPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setCinder(value);
      break;
    case 9:
      var value = new proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setCephfs(value);
      break;
    case 10:
      var value = new proto.k8s.io.api.core.v1.FCVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinaryFromReader);
      msg.setFc(value);
      break;
    case 11:
      var value = new proto.k8s.io.api.core.v1.FlockerVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinaryFromReader);
      msg.setFlocker(value);
      break;
    case 12:
      var value = new proto.k8s.io.api.core.v1.FlexPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setFlexvolume(value);
      break;
    case 13:
      var value = new proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.deserializeBinaryFromReader);
      msg.setAzurefile(value);
      break;
    case 14:
      var value = new proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinaryFromReader);
      msg.setVspherevolume(value);
      break;
    case 15:
      var value = new proto.k8s.io.api.core.v1.QuobyteVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinaryFromReader);
      msg.setQuobyte(value);
      break;
    case 16:
      var value = new proto.k8s.io.api.core.v1.AzureDiskVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinaryFromReader);
      msg.setAzuredisk(value);
      break;
    case 17:
      var value = new proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinaryFromReader);
      msg.setPhotonpersistentdisk(value);
      break;
    case 18:
      var value = new proto.k8s.io.api.core.v1.PortworxVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinaryFromReader);
      msg.setPortworxvolume(value);
      break;
    case 19:
      var value = new proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setScaleio(value);
      break;
    case 20:
      var value = new proto.k8s.io.api.core.v1.LocalVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.LocalVolumeSource.deserializeBinaryFromReader);
      msg.setLocal(value);
      break;
    case 21:
      var value = new proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setStorageos(value);
      break;
    case 22:
      var value = new proto.k8s.io.api.core.v1.CSIPersistentVolumeSource;
      reader.readMessage(value,proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.deserializeBinaryFromReader);
      msg.setCsi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.api.core.v1.PersistentVolumeSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGcepersistentdisk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getAwselasticblockstore();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getHostpath();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.k8s.io.api.core.v1.HostPathVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getGlusterfs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.k8s.io.api.core.v1.GlusterfsVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getNfs();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.k8s.io.api.core.v1.NFSVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getRbd();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getIscsi();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getCinder();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getCephfs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getFc();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.k8s.io.api.core.v1.FCVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getFlocker();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.k8s.io.api.core.v1.FlockerVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getFlexvolume();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getAzurefile();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getVspherevolume();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getQuobyte();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.k8s.io.api.core.v1.QuobyteVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getAzuredisk();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.k8s.io.api.core.v1.AzureDiskVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getPhotonpersistentdisk();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getPortworxvolume();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.k8s.io.api.core.v1.PortworxVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getScaleio();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getLocal();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.k8s.io.api.core.v1.LocalVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getStorageos();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.serializeBinaryToWriter
    );
  }
  f = message.getCsi();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional GCEPersistentDiskVolumeSource gcePersistentDisk = 1;
 * @return {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getGcepersistentdisk = function() {
  return /** @type{?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource, 1));
};


/** @param {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setGcepersistentdisk = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearGcepersistentdisk = function() {
  this.setGcepersistentdisk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasGcepersistentdisk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 2;
 * @return {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAwselasticblockstore = function() {
  return /** @type{?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource, 2));
};


/** @param {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAwselasticblockstore = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAwselasticblockstore = function() {
  this.setAwselasticblockstore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAwselasticblockstore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional HostPathVolumeSource hostPath = 3;
 * @return {?proto.k8s.io.api.core.v1.HostPathVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getHostpath = function() {
  return /** @type{?proto.k8s.io.api.core.v1.HostPathVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.HostPathVolumeSource, 3));
};


/** @param {?proto.k8s.io.api.core.v1.HostPathVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setHostpath = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearHostpath = function() {
  this.setHostpath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasHostpath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GlusterfsVolumeSource glusterfs = 4;
 * @return {?proto.k8s.io.api.core.v1.GlusterfsVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getGlusterfs = function() {
  return /** @type{?proto.k8s.io.api.core.v1.GlusterfsVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GlusterfsVolumeSource, 4));
};


/** @param {?proto.k8s.io.api.core.v1.GlusterfsVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setGlusterfs = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearGlusterfs = function() {
  this.setGlusterfs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasGlusterfs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NFSVolumeSource nfs = 5;
 * @return {?proto.k8s.io.api.core.v1.NFSVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getNfs = function() {
  return /** @type{?proto.k8s.io.api.core.v1.NFSVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NFSVolumeSource, 5));
};


/** @param {?proto.k8s.io.api.core.v1.NFSVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setNfs = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearNfs = function() {
  this.setNfs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasNfs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RBDPersistentVolumeSource rbd = 6;
 * @return {?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getRbd = function() {
  return /** @type{?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.RBDPersistentVolumeSource, 6));
};


/** @param {?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setRbd = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearRbd = function() {
  this.setRbd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasRbd = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ISCSIPersistentVolumeSource iscsi = 7;
 * @return {?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getIscsi = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource, 7));
};


/** @param {?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setIscsi = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearIscsi = function() {
  this.setIscsi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasIscsi = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CinderPersistentVolumeSource cinder = 8;
 * @return {?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCinder = function() {
  return /** @type{?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CinderPersistentVolumeSource, 8));
};


/** @param {?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCinder = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCinder = function() {
  this.setCinder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCinder = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CephFSPersistentVolumeSource cephfs = 9;
 * @return {?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCephfs = function() {
  return /** @type{?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource, 9));
};


/** @param {?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCephfs = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCephfs = function() {
  this.setCephfs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCephfs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FCVolumeSource fc = 10;
 * @return {?proto.k8s.io.api.core.v1.FCVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFc = function() {
  return /** @type{?proto.k8s.io.api.core.v1.FCVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FCVolumeSource, 10));
};


/** @param {?proto.k8s.io.api.core.v1.FCVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFc = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFc = function() {
  this.setFc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFc = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FlockerVolumeSource flocker = 11;
 * @return {?proto.k8s.io.api.core.v1.FlockerVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFlocker = function() {
  return /** @type{?proto.k8s.io.api.core.v1.FlockerVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlockerVolumeSource, 11));
};


/** @param {?proto.k8s.io.api.core.v1.FlockerVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFlocker = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFlocker = function() {
  this.setFlocker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFlocker = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional FlexPersistentVolumeSource flexVolume = 12;
 * @return {?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFlexvolume = function() {
  return /** @type{?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlexPersistentVolumeSource, 12));
};


/** @param {?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFlexvolume = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFlexvolume = function() {
  this.setFlexvolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFlexvolume = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional AzureFilePersistentVolumeSource azureFile = 13;
 * @return {?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAzurefile = function() {
  return /** @type{?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource, 13));
};


/** @param {?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAzurefile = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAzurefile = function() {
  this.setAzurefile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAzurefile = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional VsphereVirtualDiskVolumeSource vsphereVolume = 14;
 * @return {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getVspherevolume = function() {
  return /** @type{?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource, 14));
};


/** @param {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setVspherevolume = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearVspherevolume = function() {
  this.setVspherevolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasVspherevolume = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional QuobyteVolumeSource quobyte = 15;
 * @return {?proto.k8s.io.api.core.v1.QuobyteVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getQuobyte = function() {
  return /** @type{?proto.k8s.io.api.core.v1.QuobyteVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.QuobyteVolumeSource, 15));
};


/** @param {?proto.k8s.io.api.core.v1.QuobyteVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setQuobyte = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearQuobyte = function() {
  this.setQuobyte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasQuobyte = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional AzureDiskVolumeSource azureDisk = 16;
 * @return {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAzuredisk = function() {
  return /** @type{?proto.k8s.io.api.core.v1.AzureDiskVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureDiskVolumeSource, 16));
};


/** @param {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAzuredisk = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAzuredisk = function() {
  this.setAzuredisk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAzuredisk = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional PhotonPersistentDiskVolumeSource photonPersistentDisk = 17;
 * @return {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getPhotonpersistentdisk = function() {
  return /** @type{?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource, 17));
};


/** @param {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setPhotonpersistentdisk = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearPhotonpersistentdisk = function() {
  this.setPhotonpersistentdisk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasPhotonpersistentdisk = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PortworxVolumeSource portworxVolume = 18;
 * @return {?proto.k8s.io.api.core.v1.PortworxVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getPortworxvolume = function() {
  return /** @type{?proto.k8s.io.api.core.v1.PortworxVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PortworxVolumeSource, 18));
};


/** @param {?proto.k8s.io.api.core.v1.PortworxVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setPortworxvolume = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearPortworxvolume = function() {
  this.setPortworxvolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasPortworxvolume = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ScaleIOPersistentVolumeSource scaleIO = 19;
 * @return {?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getScaleio = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource, 19));
};


/** @param {?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setScaleio = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearScaleio = function() {
  this.setScaleio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasScaleio = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional LocalVolumeSource local = 20;
 * @return {?proto.k8s.io.api.core.v1.LocalVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getLocal = function() {
  return /** @type{?proto.k8s.io.api.core.v1.LocalVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalVolumeSource, 20));
};


/** @param {?proto.k8s.io.api.core.v1.LocalVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setLocal = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearLocal = function() {
  this.setLocal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional StorageOSPersistentVolumeSource storageos = 21;
 * @return {?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getStorageos = function() {
  return /** @type{?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource, 21));
};


/** @param {?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setStorageos = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearStorageos = function() {
  this.setStorageos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasStorageos = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional CSIPersistentVolumeSource csi = 22;
 * @return {?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCsi = function() {
  return /** @type{?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CSIPersistentVolumeSource, 22));
};


/** @param {?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource|undefined} value */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCsi = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCsi = function() {
  this.setCsi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCsi = function() {
  return jspb.Message.getField(this, 22) != null;
};


