/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.k8s.io.api.core.v1.ScaleIOVolumeSource');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.k8s.io.api.core.v1.LocalObjectReference');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ScaleIOVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.k8s.io.api.core.v1.ScaleIOVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ScaleIOVolumeSource';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.api.core.v1.ScaleIOVolumeSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateway: jspb.Message.getField(msg, 1),
    system: jspb.Message.getField(msg, 2),
    secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
    sslenabled: jspb.Message.getField(msg, 4),
    protectiondomain: jspb.Message.getField(msg, 5),
    storagepool: jspb.Message.getField(msg, 6),
    storagemode: jspb.Message.getField(msg, 7),
    volumename: jspb.Message.getField(msg, 8),
    fstype: jspb.Message.getField(msg, 9),
    readonly: jspb.Message.getField(msg, 10)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.api.core.v1.ScaleIOVolumeSource;
  return proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateway(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystem(value);
      break;
    case 3:
      var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
      reader.readMessage(value,proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
      msg.setSecretref(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSslenabled(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtectiondomain(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragepool(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragemode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumename(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFstype(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadonly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.api.core.v1.ScaleIOVolumeSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecretref();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string gateway = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getGateway = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setGateway = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearGateway = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasGateway = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string system = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSystem = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSystem = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSystem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LocalObjectReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSecretref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 3));
};


/** @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSecretref = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSecretref = function() {
  this.setSecretref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSecretref = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool sslEnabled = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSslenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSslenabled = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSslenabled = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSslenabled = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string protectionDomain = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getProtectiondomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setProtectiondomain = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearProtectiondomain = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasProtectiondomain = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string storagePool = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getStoragepool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setStoragepool = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearStoragepool = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasStoragepool = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string storageMode = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getStoragemode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setStoragemode = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearStoragemode = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasStoragemode = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string volumeName = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getVolumename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setVolumename = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearVolumename = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasVolumename = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string fsType = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getFstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setFstype = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearFstype = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasFstype = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool readOnly = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setReadonly = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearReadonly = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasReadonly = function() {
  return jspb.Message.getField(this, 10) != null;
};


