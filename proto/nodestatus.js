/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.k8s.io.api.core.v1.NodeStatus');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.k8s.io.api.core.v1.AttachedVolume');
goog.require('proto.k8s.io.api.core.v1.ContainerImage');
goog.require('proto.k8s.io.api.core.v1.NodeAddress');
goog.require('proto.k8s.io.api.core.v1.NodeCondition');
goog.require('proto.k8s.io.api.core.v1.NodeConfigStatus');
goog.require('proto.k8s.io.api.core.v1.NodeDaemonEndpoints');
goog.require('proto.k8s.io.api.core.v1.NodeSystemInfo');
goog.require('proto.k8s.io.apimachinery.pkg.api.resource.Quantity');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.k8s.io.api.core.v1.NodeStatus.displayName = 'proto.k8s.io.api.core.v1.NodeStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeStatus.repeatedFields_ = [4,5,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.api.core.v1.NodeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.api.core.v1.NodeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    capacityMap: (f = msg.getCapacityMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
    allocatableMap: (f = msg.getAllocatableMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
    phase: jspb.Message.getField(msg, 3),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.k8s.io.api.core.v1.NodeCondition.toObject, includeInstance),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    proto.k8s.io.api.core.v1.NodeAddress.toObject, includeInstance),
    daemonendpoints: (f = msg.getDaemonendpoints()) && proto.k8s.io.api.core.v1.NodeDaemonEndpoints.toObject(includeInstance, f),
    nodeinfo: (f = msg.getNodeinfo()) && proto.k8s.io.api.core.v1.NodeSystemInfo.toObject(includeInstance, f),
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.k8s.io.api.core.v1.ContainerImage.toObject, includeInstance),
    volumesinuseList: jspb.Message.getRepeatedField(msg, 9),
    volumesattachedList: jspb.Message.toObjectList(msg.getVolumesattachedList(),
    proto.k8s.io.api.core.v1.AttachedVolume.toObject, includeInstance),
    config: (f = msg.getConfig()) && proto.k8s.io.api.core.v1.NodeConfigStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.api.core.v1.NodeStatus;
  return proto.k8s.io.api.core.v1.NodeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCapacityMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = msg.getAllocatableMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "");
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhase(value);
      break;
    case 4:
      var value = new proto.k8s.io.api.core.v1.NodeCondition;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NodeCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    case 5:
      var value = new proto.k8s.io.api.core.v1.NodeAddress;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NodeAddress.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    case 6:
      var value = new proto.k8s.io.api.core.v1.NodeDaemonEndpoints;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NodeDaemonEndpoints.deserializeBinaryFromReader);
      msg.setDaemonendpoints(value);
      break;
    case 7:
      var value = new proto.k8s.io.api.core.v1.NodeSystemInfo;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NodeSystemInfo.deserializeBinaryFromReader);
      msg.setNodeinfo(value);
      break;
    case 8:
      var value = new proto.k8s.io.api.core.v1.ContainerImage;
      reader.readMessage(value,proto.k8s.io.api.core.v1.ContainerImage.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumesinuse(value);
      break;
    case 10:
      var value = new proto.k8s.io.api.core.v1.AttachedVolume;
      reader.readMessage(value,proto.k8s.io.api.core.v1.AttachedVolume.deserializeBinaryFromReader);
      msg.addVolumesattached(value);
      break;
    case 11:
      var value = new proto.k8s.io.api.core.v1.NodeConfigStatus;
      reader.readMessage(value,proto.k8s.io.api.core.v1.NodeConfigStatus.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.api.core.v1.NodeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapacityMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
  }
  f = message.getAllocatableMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.k8s.io.api.core.v1.NodeCondition.serializeBinaryToWriter
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.k8s.io.api.core.v1.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getDaemonendpoints();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.k8s.io.api.core.v1.NodeDaemonEndpoints.serializeBinaryToWriter
    );
  }
  f = message.getNodeinfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.k8s.io.api.core.v1.NodeSystemInfo.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.k8s.io.api.core.v1.ContainerImage.serializeBinaryToWriter
    );
  }
  f = message.getVolumesinuseList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getVolumesattachedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.k8s.io.api.core.v1.AttachedVolume.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.k8s.io.api.core.v1.NodeConfigStatus.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> capacity = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getCapacityMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearCapacityMap = function() {
  this.getCapacityMap().clear();
};


/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> allocatable = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getAllocatableMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearAllocatableMap = function() {
  this.getAllocatableMap().clear();
};


/**
 * optional string phase = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getPhase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setPhase = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearPhase = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasPhase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated NodeCondition conditions = 4;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeCondition>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeCondition, 4));
};


/** @param {!Array<!proto.k8s.io.api.core.v1.NodeCondition>} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setConditionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.NodeCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeCondition}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.k8s.io.api.core.v1.NodeCondition, opt_index);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearConditionsList = function() {
  this.setConditionsList([]);
};


/**
 * repeated NodeAddress addresses = 5;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeAddress>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeAddress, 5));
};


/** @param {!Array<!proto.k8s.io.api.core.v1.NodeAddress>} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setAddressesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.NodeAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeAddress}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.api.core.v1.NodeAddress, opt_index);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearAddressesList = function() {
  this.setAddressesList([]);
};


/**
 * optional NodeDaemonEndpoints daemonEndpoints = 6;
 * @return {?proto.k8s.io.api.core.v1.NodeDaemonEndpoints}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getDaemonendpoints = function() {
  return /** @type{?proto.k8s.io.api.core.v1.NodeDaemonEndpoints} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeDaemonEndpoints, 6));
};


/** @param {?proto.k8s.io.api.core.v1.NodeDaemonEndpoints|undefined} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setDaemonendpoints = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearDaemonendpoints = function() {
  this.setDaemonendpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasDaemonendpoints = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional NodeSystemInfo nodeInfo = 7;
 * @return {?proto.k8s.io.api.core.v1.NodeSystemInfo}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getNodeinfo = function() {
  return /** @type{?proto.k8s.io.api.core.v1.NodeSystemInfo} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSystemInfo, 7));
};


/** @param {?proto.k8s.io.api.core.v1.NodeSystemInfo|undefined} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setNodeinfo = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearNodeinfo = function() {
  this.setNodeinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasNodeinfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated ContainerImage images = 8;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerImage>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerImage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerImage, 8));
};


/** @param {!Array<!proto.k8s.io.api.core.v1.ContainerImage>} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setImagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.ContainerImage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerImage}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.k8s.io.api.core.v1.ContainerImage, opt_index);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * repeated string volumesInUse = 9;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getVolumesinuseList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setVolumesinuseList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addVolumesinuse = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearVolumesinuseList = function() {
  this.setVolumesinuseList([]);
};


/**
 * repeated AttachedVolume volumesAttached = 10;
 * @return {!Array<!proto.k8s.io.api.core.v1.AttachedVolume>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getVolumesattachedList = function() {
  return /** @type{!Array<!proto.k8s.io.api.core.v1.AttachedVolume>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.AttachedVolume, 10));
};


/** @param {!Array<!proto.k8s.io.api.core.v1.AttachedVolume>} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setVolumesattachedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.AttachedVolume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addVolumesattached = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.k8s.io.api.core.v1.AttachedVolume, opt_index);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearVolumesattachedList = function() {
  this.setVolumesattachedList([]);
};


/**
 * optional NodeConfigStatus config = 11;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getConfig = function() {
  return /** @type{?proto.k8s.io.api.core.v1.NodeConfigStatus} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigStatus, 11));
};


/** @param {?proto.k8s.io.api.core.v1.NodeConfigStatus|undefined} value */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.k8s.io.api.core.v1.NodeStatus.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 11) != null;
};


