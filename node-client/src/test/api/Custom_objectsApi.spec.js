/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.Custom_objectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Custom_objectsApi', function() {
    describe('createClusterCustomObject', function() {
      it('should call createClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test createClusterCustomObject
        //instance.createClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedCustomObject', function() {
      it('should call createNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test createNamespacedCustomObject
        //instance.createNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterCustomObject', function() {
      it('should call deleteClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test deleteClusterCustomObject
        //instance.deleteClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedCustomObject', function() {
      it('should call deleteNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedCustomObject
        //instance.deleteNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterCustomObject', function() {
      it('should call getClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test getClusterCustomObject
        //instance.getClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNamespacedCustomObject', function() {
      it('should call getNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test getNamespacedCustomObject
        //instance.getNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterCustomObject', function() {
      it('should call listClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test listClusterCustomObject
        //instance.listClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedCustomObject', function() {
      it('should call listNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test listNamespacedCustomObject
        //instance.listNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchClusterCustomObject', function() {
      it('should call patchClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test patchClusterCustomObject
        //instance.patchClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedCustomObject', function() {
      it('should call patchNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedCustomObject
        //instance.patchNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceClusterCustomObject', function() {
      it('should call replaceClusterCustomObject successfully', function(done) {
        //uncomment below and update the code to test replaceClusterCustomObject
        //instance.replaceClusterCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedCustomObject', function() {
      it('should call replaceNamespacedCustomObject successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedCustomObject
        //instance.replaceNamespacedCustomObject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
