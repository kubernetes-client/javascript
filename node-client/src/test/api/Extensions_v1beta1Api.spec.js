/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.Extensions_v1beta1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Extensions_v1beta1Api', function() {
    describe('createNamespacedDaemonSet', function() {
      it('should call createNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test createNamespacedDaemonSet
        //instance.createNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedDeployment', function() {
      it('should call createNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test createNamespacedDeployment
        //instance.createNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedDeploymentRollback', function() {
      it('should call createNamespacedDeploymentRollback successfully', function(done) {
        //uncomment below and update the code to test createNamespacedDeploymentRollback
        //instance.createNamespacedDeploymentRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedIngress', function() {
      it('should call createNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test createNamespacedIngress
        //instance.createNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedNetworkPolicy', function() {
      it('should call createNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test createNamespacedNetworkPolicy
        //instance.createNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedReplicaSet', function() {
      it('should call createNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test createNamespacedReplicaSet
        //instance.createNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPodSecurityPolicy', function() {
      it('should call createPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test createPodSecurityPolicy
        //instance.createPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedDaemonSet', function() {
      it('should call deleteCollectionNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedDaemonSet
        //instance.deleteCollectionNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedDeployment', function() {
      it('should call deleteCollectionNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedDeployment
        //instance.deleteCollectionNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedIngress', function() {
      it('should call deleteCollectionNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedIngress
        //instance.deleteCollectionNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedNetworkPolicy', function() {
      it('should call deleteCollectionNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedNetworkPolicy
        //instance.deleteCollectionNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedReplicaSet', function() {
      it('should call deleteCollectionNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedReplicaSet
        //instance.deleteCollectionNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionPodSecurityPolicy', function() {
      it('should call deleteCollectionPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionPodSecurityPolicy
        //instance.deleteCollectionPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedDaemonSet', function() {
      it('should call deleteNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedDaemonSet
        //instance.deleteNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedDeployment', function() {
      it('should call deleteNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedDeployment
        //instance.deleteNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedIngress', function() {
      it('should call deleteNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedIngress
        //instance.deleteNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedNetworkPolicy', function() {
      it('should call deleteNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedNetworkPolicy
        //instance.deleteNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedReplicaSet', function() {
      it('should call deleteNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedReplicaSet
        //instance.deleteNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePodSecurityPolicy', function() {
      it('should call deletePodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test deletePodSecurityPolicy
        //instance.deletePodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIResources', function() {
      it('should call getAPIResources successfully', function(done) {
        //uncomment below and update the code to test getAPIResources
        //instance.getAPIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDaemonSetForAllNamespaces', function() {
      it('should call listDaemonSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listDaemonSetForAllNamespaces
        //instance.listDaemonSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeploymentForAllNamespaces', function() {
      it('should call listDeploymentForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listDeploymentForAllNamespaces
        //instance.listDeploymentForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIngressForAllNamespaces', function() {
      it('should call listIngressForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listIngressForAllNamespaces
        //instance.listIngressForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedDaemonSet', function() {
      it('should call listNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test listNamespacedDaemonSet
        //instance.listNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedDeployment', function() {
      it('should call listNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test listNamespacedDeployment
        //instance.listNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedIngress', function() {
      it('should call listNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test listNamespacedIngress
        //instance.listNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedNetworkPolicy', function() {
      it('should call listNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test listNamespacedNetworkPolicy
        //instance.listNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedReplicaSet', function() {
      it('should call listNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test listNamespacedReplicaSet
        //instance.listNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNetworkPolicyForAllNamespaces', function() {
      it('should call listNetworkPolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listNetworkPolicyForAllNamespaces
        //instance.listNetworkPolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPodSecurityPolicy', function() {
      it('should call listPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test listPodSecurityPolicy
        //instance.listPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReplicaSetForAllNamespaces', function() {
      it('should call listReplicaSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listReplicaSetForAllNamespaces
        //instance.listReplicaSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedDaemonSet', function() {
      it('should call patchNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedDaemonSet
        //instance.patchNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedDaemonSetStatus', function() {
      it('should call patchNamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedDaemonSetStatus
        //instance.patchNamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedDeployment', function() {
      it('should call patchNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedDeployment
        //instance.patchNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedDeploymentScale', function() {
      it('should call patchNamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedDeploymentScale
        //instance.patchNamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedDeploymentStatus', function() {
      it('should call patchNamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedDeploymentStatus
        //instance.patchNamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedIngress', function() {
      it('should call patchNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedIngress
        //instance.patchNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedIngressStatus', function() {
      it('should call patchNamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedIngressStatus
        //instance.patchNamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedNetworkPolicy', function() {
      it('should call patchNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedNetworkPolicy
        //instance.patchNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedReplicaSet', function() {
      it('should call patchNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedReplicaSet
        //instance.patchNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedReplicaSetScale', function() {
      it('should call patchNamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedReplicaSetScale
        //instance.patchNamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedReplicaSetStatus', function() {
      it('should call patchNamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedReplicaSetStatus
        //instance.patchNamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedReplicationControllerDummyScale', function() {
      it('should call patchNamespacedReplicationControllerDummyScale successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedReplicationControllerDummyScale
        //instance.patchNamespacedReplicationControllerDummyScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPodSecurityPolicy', function() {
      it('should call patchPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test patchPodSecurityPolicy
        //instance.patchPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedDaemonSet', function() {
      it('should call readNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test readNamespacedDaemonSet
        //instance.readNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedDaemonSetStatus', function() {
      it('should call readNamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedDaemonSetStatus
        //instance.readNamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedDeployment', function() {
      it('should call readNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test readNamespacedDeployment
        //instance.readNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedDeploymentScale', function() {
      it('should call readNamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test readNamespacedDeploymentScale
        //instance.readNamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedDeploymentStatus', function() {
      it('should call readNamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedDeploymentStatus
        //instance.readNamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedIngress', function() {
      it('should call readNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test readNamespacedIngress
        //instance.readNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedIngressStatus', function() {
      it('should call readNamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedIngressStatus
        //instance.readNamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedNetworkPolicy', function() {
      it('should call readNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test readNamespacedNetworkPolicy
        //instance.readNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedReplicaSet', function() {
      it('should call readNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test readNamespacedReplicaSet
        //instance.readNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedReplicaSetScale', function() {
      it('should call readNamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test readNamespacedReplicaSetScale
        //instance.readNamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedReplicaSetStatus', function() {
      it('should call readNamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test readNamespacedReplicaSetStatus
        //instance.readNamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedReplicationControllerDummyScale', function() {
      it('should call readNamespacedReplicationControllerDummyScale successfully', function(done) {
        //uncomment below and update the code to test readNamespacedReplicationControllerDummyScale
        //instance.readNamespacedReplicationControllerDummyScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPodSecurityPolicy', function() {
      it('should call readPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test readPodSecurityPolicy
        //instance.readPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedDaemonSet', function() {
      it('should call replaceNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedDaemonSet
        //instance.replaceNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedDaemonSetStatus', function() {
      it('should call replaceNamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedDaemonSetStatus
        //instance.replaceNamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedDeployment', function() {
      it('should call replaceNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedDeployment
        //instance.replaceNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedDeploymentScale', function() {
      it('should call replaceNamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedDeploymentScale
        //instance.replaceNamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedDeploymentStatus', function() {
      it('should call replaceNamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedDeploymentStatus
        //instance.replaceNamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedIngress', function() {
      it('should call replaceNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedIngress
        //instance.replaceNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedIngressStatus', function() {
      it('should call replaceNamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedIngressStatus
        //instance.replaceNamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedNetworkPolicy', function() {
      it('should call replaceNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedNetworkPolicy
        //instance.replaceNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedReplicaSet', function() {
      it('should call replaceNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedReplicaSet
        //instance.replaceNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedReplicaSetScale', function() {
      it('should call replaceNamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedReplicaSetScale
        //instance.replaceNamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedReplicaSetStatus', function() {
      it('should call replaceNamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedReplicaSetStatus
        //instance.replaceNamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedReplicationControllerDummyScale', function() {
      it('should call replaceNamespacedReplicationControllerDummyScale successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedReplicationControllerDummyScale
        //instance.replaceNamespacedReplicationControllerDummyScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replacePodSecurityPolicy', function() {
      it('should call replacePodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test replacePodSecurityPolicy
        //instance.replacePodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
