/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V2beta1ExternalMetricSource from './V2beta1ExternalMetricSource';
import V2beta1ObjectMetricSource from './V2beta1ObjectMetricSource';
import V2beta1PodsMetricSource from './V2beta1PodsMetricSource';
import V2beta1ResourceMetricSource from './V2beta1ResourceMetricSource';





/**
* The V2beta1MetricSpec model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V2beta1MetricSpec
* @version 0.3-SNAPSHOT
*/
export default class V2beta1MetricSpec {
    /**
    * Constructs a new <code>V2beta1MetricSpec</code>.
    * MetricSpec specifies how to scale based on a single metric (only &#x60;type&#x60; and one other matching field should be set at once).
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V2beta1MetricSpec
    * @class
    * @param type {String} type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.
    */

    constructor(type) {
        

        
        

        this['type'] = type;

        
    }

    /**
    * Constructs a <code>V2beta1MetricSpec</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1MetricSpec} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1MetricSpec} The populated <code>V2beta1MetricSpec</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V2beta1MetricSpec();

            
            
            

            if (data.hasOwnProperty('external')) {
                obj['external'] = V2beta1ExternalMetricSource.constructFromObject(data['external']);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = V2beta1ObjectMetricSource.constructFromObject(data['object']);
            }
            if (data.hasOwnProperty('pods')) {
                obj['pods'] = V2beta1PodsMetricSource.constructFromObject(data['pods']);
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = V2beta1ResourceMetricSource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1ExternalMetricSource} external
    */
    external = undefined;
    /**
    * object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1ObjectMetricSource} object
    */
    object = undefined;
    /**
    * pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1PodsMetricSource} pods
    */
    pods = undefined;
    /**
    * resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V2beta1ResourceMetricSource} resource
    */
    resource = undefined;
    /**
    * type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.
    * @member {String} type
    */
    type = undefined;








}


