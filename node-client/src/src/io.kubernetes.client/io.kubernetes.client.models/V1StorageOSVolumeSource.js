/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1LocalObjectReference from './V1LocalObjectReference';





/**
* The V1StorageOSVolumeSource model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1StorageOSVolumeSource
* @version 0.3-SNAPSHOT
*/
export default class V1StorageOSVolumeSource {
    /**
    * Constructs a new <code>V1StorageOSVolumeSource</code>.
    * Represents a StorageOS persistent volume resource.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1StorageOSVolumeSource
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1StorageOSVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1StorageOSVolumeSource} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1StorageOSVolumeSource} The populated <code>V1StorageOSVolumeSource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1StorageOSVolumeSource();

            
            
            

            if (data.hasOwnProperty('fsType')) {
                obj['fsType'] = ApiClient.convertToType(data['fsType'], 'String');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('secretRef')) {
                obj['secretRef'] = V1LocalObjectReference.constructFromObject(data['secretRef']);
            }
            if (data.hasOwnProperty('volumeName')) {
                obj['volumeName'] = ApiClient.convertToType(data['volumeName'], 'String');
            }
            if (data.hasOwnProperty('volumeNamespace')) {
                obj['volumeNamespace'] = ApiClient.convertToType(data['volumeNamespace'], 'String');
            }
        }
        return obj;
    }

    /**
    * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
    * @member {String} fsType
    */
    fsType = undefined;
    /**
    * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    * @member {Boolean} readOnly
    */
    readOnly = undefined;
    /**
    * SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1LocalObjectReference} secretRef
    */
    secretRef = undefined;
    /**
    * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    * @member {String} volumeName
    */
    volumeName = undefined;
    /**
    * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    * @member {String} volumeNamespace
    */
    volumeNamespace = undefined;








}


