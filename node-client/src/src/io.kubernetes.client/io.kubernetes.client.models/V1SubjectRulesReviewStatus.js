/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1NonResourceRule from './V1NonResourceRule';
import V1ResourceRule from './V1ResourceRule';





/**
* The V1SubjectRulesReviewStatus model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1SubjectRulesReviewStatus
* @version 0.3-SNAPSHOT
*/
export default class V1SubjectRulesReviewStatus {
    /**
    * Constructs a new <code>V1SubjectRulesReviewStatus</code>.
    * SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it&#39;s safe to assume the subject has that permission, even if that list is incomplete.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1SubjectRulesReviewStatus
    * @class
    * @param incomplete {Boolean} Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
    * @param nonResourceRules {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1NonResourceRule>} NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
    * @param resourceRules {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1ResourceRule>} ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
    */

    constructor(incomplete, nonResourceRules, resourceRules) {
        

        
        

        this['incomplete'] = incomplete;this['nonResourceRules'] = nonResourceRules;this['resourceRules'] = resourceRules;

        
    }

    /**
    * Constructs a <code>V1SubjectRulesReviewStatus</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1SubjectRulesReviewStatus} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1SubjectRulesReviewStatus} The populated <code>V1SubjectRulesReviewStatus</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1SubjectRulesReviewStatus();

            
            
            

            if (data.hasOwnProperty('evaluationError')) {
                obj['evaluationError'] = ApiClient.convertToType(data['evaluationError'], 'String');
            }
            if (data.hasOwnProperty('incomplete')) {
                obj['incomplete'] = ApiClient.convertToType(data['incomplete'], 'Boolean');
            }
            if (data.hasOwnProperty('nonResourceRules')) {
                obj['nonResourceRules'] = ApiClient.convertToType(data['nonResourceRules'], [V1NonResourceRule]);
            }
            if (data.hasOwnProperty('resourceRules')) {
                obj['resourceRules'] = ApiClient.convertToType(data['resourceRules'], [V1ResourceRule]);
            }
        }
        return obj;
    }

    /**
    * EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
    * @member {String} evaluationError
    */
    evaluationError = undefined;
    /**
    * Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
    * @member {Boolean} incomplete
    */
    incomplete = undefined;
    /**
    * NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1NonResourceRule>} nonResourceRules
    */
    nonResourceRules = undefined;
    /**
    * ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1ResourceRule>} resourceRules
    */
    resourceRules = undefined;








}


