/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1beta2DaemonSetCondition from './V1beta2DaemonSetCondition';





/**
* The V1beta2DaemonSetStatus model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1beta2DaemonSetStatus
* @version 0.3-SNAPSHOT
*/
export default class V1beta2DaemonSetStatus {
    /**
    * Constructs a new <code>V1beta2DaemonSetStatus</code>.
    * DaemonSetStatus represents the current status of a daemon set.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1beta2DaemonSetStatus
    * @class
    * @param currentNumberScheduled {Number} The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @param desiredNumberScheduled {Number} The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @param numberMisscheduled {Number} The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @param numberReady {Number} The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
    */

    constructor(currentNumberScheduled, desiredNumberScheduled, numberMisscheduled, numberReady) {
        

        
        

        this['currentNumberScheduled'] = currentNumberScheduled;this['desiredNumberScheduled'] = desiredNumberScheduled;this['numberMisscheduled'] = numberMisscheduled;this['numberReady'] = numberReady;

        
    }

    /**
    * Constructs a <code>V1beta2DaemonSetStatus</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta2DaemonSetStatus} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1beta2DaemonSetStatus} The populated <code>V1beta2DaemonSetStatus</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1beta2DaemonSetStatus();

            
            
            

            if (data.hasOwnProperty('collisionCount')) {
                obj['collisionCount'] = ApiClient.convertToType(data['collisionCount'], 'Number');
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [V1beta2DaemonSetCondition]);
            }
            if (data.hasOwnProperty('currentNumberScheduled')) {
                obj['currentNumberScheduled'] = ApiClient.convertToType(data['currentNumberScheduled'], 'Number');
            }
            if (data.hasOwnProperty('desiredNumberScheduled')) {
                obj['desiredNumberScheduled'] = ApiClient.convertToType(data['desiredNumberScheduled'], 'Number');
            }
            if (data.hasOwnProperty('numberAvailable')) {
                obj['numberAvailable'] = ApiClient.convertToType(data['numberAvailable'], 'Number');
            }
            if (data.hasOwnProperty('numberMisscheduled')) {
                obj['numberMisscheduled'] = ApiClient.convertToType(data['numberMisscheduled'], 'Number');
            }
            if (data.hasOwnProperty('numberReady')) {
                obj['numberReady'] = ApiClient.convertToType(data['numberReady'], 'Number');
            }
            if (data.hasOwnProperty('numberUnavailable')) {
                obj['numberUnavailable'] = ApiClient.convertToType(data['numberUnavailable'], 'Number');
            }
            if (data.hasOwnProperty('observedGeneration')) {
                obj['observedGeneration'] = ApiClient.convertToType(data['observedGeneration'], 'Number');
            }
            if (data.hasOwnProperty('updatedNumberScheduled')) {
                obj['updatedNumberScheduled'] = ApiClient.convertToType(data['updatedNumberScheduled'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
    * @member {Number} collisionCount
    */
    collisionCount = undefined;
    /**
    * Represents the latest available observations of a DaemonSet's current state.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1beta2DaemonSetCondition>} conditions
    */
    conditions = undefined;
    /**
    * The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @member {Number} currentNumberScheduled
    */
    currentNumberScheduled = undefined;
    /**
    * The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @member {Number} desiredNumberScheduled
    */
    desiredNumberScheduled = undefined;
    /**
    * The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
    * @member {Number} numberAvailable
    */
    numberAvailable = undefined;
    /**
    * The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    * @member {Number} numberMisscheduled
    */
    numberMisscheduled = undefined;
    /**
    * The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
    * @member {Number} numberReady
    */
    numberReady = undefined;
    /**
    * The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
    * @member {Number} numberUnavailable
    */
    numberUnavailable = undefined;
    /**
    * The most recent generation observed by the daemon set controller.
    * @member {Number} observedGeneration
    */
    observedGeneration = undefined;
    /**
    * The total number of nodes that are running updated daemon pod
    * @member {Number} updatedNumberScheduled
    */
    updatedNumberScheduled = undefined;








}


