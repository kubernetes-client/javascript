/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The V1FCVolumeSource model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1FCVolumeSource
* @version 0.3-SNAPSHOT
*/
export default class V1FCVolumeSource {
    /**
    * Constructs a new <code>V1FCVolumeSource</code>.
    * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1FCVolumeSource
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1FCVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1FCVolumeSource} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1FCVolumeSource} The populated <code>V1FCVolumeSource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1FCVolumeSource();

            
            
            

            if (data.hasOwnProperty('fsType')) {
                obj['fsType'] = ApiClient.convertToType(data['fsType'], 'String');
            }
            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('targetWWNs')) {
                obj['targetWWNs'] = ApiClient.convertToType(data['targetWWNs'], ['String']);
            }
            if (data.hasOwnProperty('wwids')) {
                obj['wwids'] = ApiClient.convertToType(data['wwids'], ['String']);
            }
        }
        return obj;
    }

    /**
    * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
    * @member {String} fsType
    */
    fsType = undefined;
    /**
    * Optional: FC target lun number
    * @member {Number} lun
    */
    lun = undefined;
    /**
    * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    * @member {Boolean} readOnly
    */
    readOnly = undefined;
    /**
    * Optional: FC target worldwide names (WWNs)
    * @member {Array.<String>} targetWWNs
    */
    targetWWNs = undefined;
    /**
    * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    * @member {Array.<String>} wwids
    */
    wwids = undefined;








}


