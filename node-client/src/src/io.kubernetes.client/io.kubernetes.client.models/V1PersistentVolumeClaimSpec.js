/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1LabelSelector from './V1LabelSelector';
import V1ResourceRequirements from './V1ResourceRequirements';





/**
* The V1PersistentVolumeClaimSpec model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1PersistentVolumeClaimSpec
* @version 0.3-SNAPSHOT
*/
export default class V1PersistentVolumeClaimSpec {
    /**
    * Constructs a new <code>V1PersistentVolumeClaimSpec</code>.
    * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1PersistentVolumeClaimSpec
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1PersistentVolumeClaimSpec</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1PersistentVolumeClaimSpec} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1PersistentVolumeClaimSpec} The populated <code>V1PersistentVolumeClaimSpec</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1PersistentVolumeClaimSpec();

            
            
            

            if (data.hasOwnProperty('accessModes')) {
                obj['accessModes'] = ApiClient.convertToType(data['accessModes'], ['String']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = V1ResourceRequirements.constructFromObject(data['resources']);
            }
            if (data.hasOwnProperty('selector')) {
                obj['selector'] = V1LabelSelector.constructFromObject(data['selector']);
            }
            if (data.hasOwnProperty('storageClassName')) {
                obj['storageClassName'] = ApiClient.convertToType(data['storageClassName'], 'String');
            }
            if (data.hasOwnProperty('volumeMode')) {
                obj['volumeMode'] = ApiClient.convertToType(data['volumeMode'], 'String');
            }
            if (data.hasOwnProperty('volumeName')) {
                obj['volumeName'] = ApiClient.convertToType(data['volumeName'], 'String');
            }
        }
        return obj;
    }

    /**
    * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    * @member {Array.<String>} accessModes
    */
    accessModes = undefined;
    /**
    * Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1ResourceRequirements} resources
    */
    resources = undefined;
    /**
    * A label query over volumes to consider for binding.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1LabelSelector} selector
    */
    selector = undefined;
    /**
    * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    * @member {String} storageClassName
    */
    storageClassName = undefined;
    /**
    * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is an alpha feature and may change in the future.
    * @member {String} volumeMode
    */
    volumeMode = undefined;
    /**
    * VolumeName is the binding reference to the PersistentVolume backing this claim.
    * @member {String} volumeName
    */
    volumeName = undefined;








}


