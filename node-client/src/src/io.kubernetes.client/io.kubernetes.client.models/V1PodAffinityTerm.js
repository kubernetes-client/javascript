/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1LabelSelector from './V1LabelSelector';





/**
* The V1PodAffinityTerm model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1PodAffinityTerm
* @version 0.3-SNAPSHOT
*/
export default class V1PodAffinityTerm {
    /**
    * Constructs a new <code>V1PodAffinityTerm</code>.
    * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key &lt;topologyKey&gt; matches that of any node on which a pod of the set of pods is running
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1PodAffinityTerm
    * @class
    * @param topologyKey {String} This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    */

    constructor(topologyKey) {
        

        
        

        this['topologyKey'] = topologyKey;

        
    }

    /**
    * Constructs a <code>V1PodAffinityTerm</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1PodAffinityTerm} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1PodAffinityTerm} The populated <code>V1PodAffinityTerm</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1PodAffinityTerm();

            
            
            

            if (data.hasOwnProperty('labelSelector')) {
                obj['labelSelector'] = V1LabelSelector.constructFromObject(data['labelSelector']);
            }
            if (data.hasOwnProperty('namespaces')) {
                obj['namespaces'] = ApiClient.convertToType(data['namespaces'], ['String']);
            }
            if (data.hasOwnProperty('topologyKey')) {
                obj['topologyKey'] = ApiClient.convertToType(data['topologyKey'], 'String');
            }
        }
        return obj;
    }

    /**
    * A label query over a set of resources, in this case pods.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1LabelSelector} labelSelector
    */
    labelSelector = undefined;
    /**
    * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"
    * @member {Array.<String>} namespaces
    */
    namespaces = undefined;
    /**
    * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    * @member {String} topologyKey
    */
    topologyKey = undefined;








}


