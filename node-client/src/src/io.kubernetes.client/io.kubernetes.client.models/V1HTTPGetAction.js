/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1HTTPHeader from './V1HTTPHeader';





/**
* The V1HTTPGetAction model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1HTTPGetAction
* @version 0.3-SNAPSHOT
*/
export default class V1HTTPGetAction {
    /**
    * Constructs a new <code>V1HTTPGetAction</code>.
    * HTTPGetAction describes an action based on HTTP Get requests.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1HTTPGetAction
    * @class
    * @param port {Object} Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    */

    constructor(port) {
        

        
        

        this['port'] = port;

        
    }

    /**
    * Constructs a <code>V1HTTPGetAction</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1HTTPGetAction} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1HTTPGetAction} The populated <code>V1HTTPGetAction</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1HTTPGetAction();

            
            
            

            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('httpHeaders')) {
                obj['httpHeaders'] = ApiClient.convertToType(data['httpHeaders'], [V1HTTPHeader]);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], Object);
            }
            if (data.hasOwnProperty('scheme')) {
                obj['scheme'] = ApiClient.convertToType(data['scheme'], 'String');
            }
        }
        return obj;
    }

    /**
    * Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.
    * @member {String} host
    */
    host = undefined;
    /**
    * Custom headers to set in the request. HTTP allows repeated headers.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1HTTPHeader>} httpHeaders
    */
    httpHeaders = undefined;
    /**
    * Path to access on the HTTP server.
    * @member {String} path
    */
    path = undefined;
    /**
    * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    * @member {Object} port
    */
    port = undefined;
    /**
    * Scheme to use for connecting to the host. Defaults to HTTP.
    * @member {String} scheme
    */
    scheme = undefined;








}


