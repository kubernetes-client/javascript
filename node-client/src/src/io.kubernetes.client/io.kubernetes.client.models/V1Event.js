/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1EventSeries from './V1EventSeries';
import V1EventSource from './V1EventSource';
import V1ObjectMeta from './V1ObjectMeta';
import V1ObjectReference from './V1ObjectReference';





/**
* The V1Event model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1Event
* @version 0.3-SNAPSHOT
*/
export default class V1Event {
    /**
    * Constructs a new <code>V1Event</code>.
    * Event is a report of an event somewhere in the cluster.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1Event
    * @class
    * @param involvedObject {module:io.kubernetes.client/io.kubernetes.client.models/V1ObjectReference} The object that this event is about.
    * @param metadata {module:io.kubernetes.client/io.kubernetes.client.models/V1ObjectMeta} Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    */

    constructor(involvedObject, metadata) {
        

        
        

        this['involvedObject'] = involvedObject;this['metadata'] = metadata;

        
    }

    /**
    * Constructs a <code>V1Event</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Event} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1Event} The populated <code>V1Event</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1Event();

            
            
            

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('eventTime')) {
                obj['eventTime'] = ApiClient.convertToType(data['eventTime'], 'Date');
            }
            if (data.hasOwnProperty('firstTimestamp')) {
                obj['firstTimestamp'] = ApiClient.convertToType(data['firstTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('involvedObject')) {
                obj['involvedObject'] = V1ObjectReference.constructFromObject(data['involvedObject']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastTimestamp')) {
                obj['lastTimestamp'] = ApiClient.convertToType(data['lastTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = V1ObjectMeta.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('related')) {
                obj['related'] = V1ObjectReference.constructFromObject(data['related']);
            }
            if (data.hasOwnProperty('reportingComponent')) {
                obj['reportingComponent'] = ApiClient.convertToType(data['reportingComponent'], 'String');
            }
            if (data.hasOwnProperty('reportingInstance')) {
                obj['reportingInstance'] = ApiClient.convertToType(data['reportingInstance'], 'String');
            }
            if (data.hasOwnProperty('series')) {
                obj['series'] = V1EventSeries.constructFromObject(data['series']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = V1EventSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * What action was taken/failed regarding to the Regarding object.
    * @member {String} action
    */
    action = undefined;
    /**
    * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
    * @member {String} apiVersion
    */
    apiVersion = undefined;
    /**
    * The number of times this event has occurred.
    * @member {Number} count
    */
    count = undefined;
    /**
    * Time when this Event was first observed.
    * @member {Date} eventTime
    */
    eventTime = undefined;
    /**
    * The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
    * @member {Date} firstTimestamp
    */
    firstTimestamp = undefined;
    /**
    * The object that this event is about.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1ObjectReference} involvedObject
    */
    involvedObject = undefined;
    /**
    * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    * @member {String} kind
    */
    kind = undefined;
    /**
    * The time at which the most recent occurrence of this event was recorded.
    * @member {Date} lastTimestamp
    */
    lastTimestamp = undefined;
    /**
    * A human-readable description of the status of this operation.
    * @member {String} message
    */
    message = undefined;
    /**
    * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1ObjectMeta} metadata
    */
    metadata = undefined;
    /**
    * This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
    * @member {String} reason
    */
    reason = undefined;
    /**
    * Optional secondary object for more complex actions.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1ObjectReference} related
    */
    related = undefined;
    /**
    * Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
    * @member {String} reportingComponent
    */
    reportingComponent = undefined;
    /**
    * ID of the controller instance, e.g. `kubelet-xyzf`.
    * @member {String} reportingInstance
    */
    reportingInstance = undefined;
    /**
    * Data about the Event series this event represents or nil if it's a singleton Event.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1EventSeries} series
    */
    series = undefined;
    /**
    * The component reporting this event. Should be a short machine understandable string.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1EventSource} source
    */
    source = undefined;
    /**
    * Type of this event (Normal, Warning), new types could be added in the future
    * @member {String} type
    */
    type = undefined;








}


