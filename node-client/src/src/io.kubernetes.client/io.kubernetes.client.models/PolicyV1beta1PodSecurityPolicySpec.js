/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import PolicyV1beta1AllowedFlexVolume from './PolicyV1beta1AllowedFlexVolume';
import PolicyV1beta1AllowedHostPath from './PolicyV1beta1AllowedHostPath';
import PolicyV1beta1FSGroupStrategyOptions from './PolicyV1beta1FSGroupStrategyOptions';
import PolicyV1beta1HostPortRange from './PolicyV1beta1HostPortRange';
import PolicyV1beta1RunAsUserStrategyOptions from './PolicyV1beta1RunAsUserStrategyOptions';
import PolicyV1beta1SELinuxStrategyOptions from './PolicyV1beta1SELinuxStrategyOptions';
import PolicyV1beta1SupplementalGroupsStrategyOptions from './PolicyV1beta1SupplementalGroupsStrategyOptions';





/**
* The PolicyV1beta1PodSecurityPolicySpec model module.
* @module io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1PodSecurityPolicySpec
* @version 0.3-SNAPSHOT
*/
export default class PolicyV1beta1PodSecurityPolicySpec {
    /**
    * Constructs a new <code>PolicyV1beta1PodSecurityPolicySpec</code>.
    * Pod Security Policy Spec defines the policy enforced.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1PodSecurityPolicySpec
    * @class
    * @param fsGroup {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1FSGroupStrategyOptions} FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
    * @param runAsUser {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1RunAsUserStrategyOptions} runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
    * @param seLinux {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1SELinuxStrategyOptions} seLinux is the strategy that will dictate the allowable labels that may be set.
    * @param supplementalGroups {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1SupplementalGroupsStrategyOptions} SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
    */

    constructor(fsGroup, runAsUser, seLinux, supplementalGroups) {
        

        
        

        this['fsGroup'] = fsGroup;this['runAsUser'] = runAsUser;this['seLinux'] = seLinux;this['supplementalGroups'] = supplementalGroups;

        
    }

    /**
    * Constructs a <code>PolicyV1beta1PodSecurityPolicySpec</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1PodSecurityPolicySpec} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1PodSecurityPolicySpec} The populated <code>PolicyV1beta1PodSecurityPolicySpec</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyV1beta1PodSecurityPolicySpec();

            
            
            

            if (data.hasOwnProperty('allowPrivilegeEscalation')) {
                obj['allowPrivilegeEscalation'] = ApiClient.convertToType(data['allowPrivilegeEscalation'], 'Boolean');
            }
            if (data.hasOwnProperty('allowedCapabilities')) {
                obj['allowedCapabilities'] = ApiClient.convertToType(data['allowedCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('allowedFlexVolumes')) {
                obj['allowedFlexVolumes'] = ApiClient.convertToType(data['allowedFlexVolumes'], [PolicyV1beta1AllowedFlexVolume]);
            }
            if (data.hasOwnProperty('allowedHostPaths')) {
                obj['allowedHostPaths'] = ApiClient.convertToType(data['allowedHostPaths'], [PolicyV1beta1AllowedHostPath]);
            }
            if (data.hasOwnProperty('defaultAddCapabilities')) {
                obj['defaultAddCapabilities'] = ApiClient.convertToType(data['defaultAddCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('defaultAllowPrivilegeEscalation')) {
                obj['defaultAllowPrivilegeEscalation'] = ApiClient.convertToType(data['defaultAllowPrivilegeEscalation'], 'Boolean');
            }
            if (data.hasOwnProperty('fsGroup')) {
                obj['fsGroup'] = PolicyV1beta1FSGroupStrategyOptions.constructFromObject(data['fsGroup']);
            }
            if (data.hasOwnProperty('hostIPC')) {
                obj['hostIPC'] = ApiClient.convertToType(data['hostIPC'], 'Boolean');
            }
            if (data.hasOwnProperty('hostNetwork')) {
                obj['hostNetwork'] = ApiClient.convertToType(data['hostNetwork'], 'Boolean');
            }
            if (data.hasOwnProperty('hostPID')) {
                obj['hostPID'] = ApiClient.convertToType(data['hostPID'], 'Boolean');
            }
            if (data.hasOwnProperty('hostPorts')) {
                obj['hostPorts'] = ApiClient.convertToType(data['hostPorts'], [PolicyV1beta1HostPortRange]);
            }
            if (data.hasOwnProperty('privileged')) {
                obj['privileged'] = ApiClient.convertToType(data['privileged'], 'Boolean');
            }
            if (data.hasOwnProperty('readOnlyRootFilesystem')) {
                obj['readOnlyRootFilesystem'] = ApiClient.convertToType(data['readOnlyRootFilesystem'], 'Boolean');
            }
            if (data.hasOwnProperty('requiredDropCapabilities')) {
                obj['requiredDropCapabilities'] = ApiClient.convertToType(data['requiredDropCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('runAsUser')) {
                obj['runAsUser'] = PolicyV1beta1RunAsUserStrategyOptions.constructFromObject(data['runAsUser']);
            }
            if (data.hasOwnProperty('seLinux')) {
                obj['seLinux'] = PolicyV1beta1SELinuxStrategyOptions.constructFromObject(data['seLinux']);
            }
            if (data.hasOwnProperty('supplementalGroups')) {
                obj['supplementalGroups'] = PolicyV1beta1SupplementalGroupsStrategyOptions.constructFromObject(data['supplementalGroups']);
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], ['String']);
            }
        }
        return obj;
    }

    /**
    * AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
    * @member {Boolean} allowPrivilegeEscalation
    */
    allowPrivilegeEscalation = undefined;
    /**
    * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.
    * @member {Array.<String>} allowedCapabilities
    */
    allowedCapabilities = undefined;
    /**
    * AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1AllowedFlexVolume>} allowedFlexVolumes
    */
    allowedFlexVolumes = undefined;
    /**
    * is a white list of allowed host paths. Empty indicates that all host paths may be used.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1AllowedHostPath>} allowedHostPaths
    */
    allowedHostPaths = undefined;
    /**
    * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both DefaultAddCapabilities and RequiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the AllowedCapabilities list.
    * @member {Array.<String>} defaultAddCapabilities
    */
    defaultAddCapabilities = undefined;
    /**
    * DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
    * @member {Boolean} defaultAllowPrivilegeEscalation
    */
    defaultAllowPrivilegeEscalation = undefined;
    /**
    * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1FSGroupStrategyOptions} fsGroup
    */
    fsGroup = undefined;
    /**
    * hostIPC determines if the policy allows the use of HostIPC in the pod spec.
    * @member {Boolean} hostIPC
    */
    hostIPC = undefined;
    /**
    * hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
    * @member {Boolean} hostNetwork
    */
    hostNetwork = undefined;
    /**
    * hostPID determines if the policy allows the use of HostPID in the pod spec.
    * @member {Boolean} hostPID
    */
    hostPID = undefined;
    /**
    * hostPorts determines which host port ranges are allowed to be exposed.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1HostPortRange>} hostPorts
    */
    hostPorts = undefined;
    /**
    * privileged determines if a pod can request to be run as privileged.
    * @member {Boolean} privileged
    */
    privileged = undefined;
    /**
    * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
    * @member {Boolean} readOnlyRootFilesystem
    */
    readOnlyRootFilesystem = undefined;
    /**
    * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
    * @member {Array.<String>} requiredDropCapabilities
    */
    requiredDropCapabilities = undefined;
    /**
    * runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1RunAsUserStrategyOptions} runAsUser
    */
    runAsUser = undefined;
    /**
    * seLinux is the strategy that will dictate the allowable labels that may be set.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1SELinuxStrategyOptions} seLinux
    */
    seLinux = undefined;
    /**
    * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/PolicyV1beta1SupplementalGroupsStrategyOptions} supplementalGroups
    */
    supplementalGroups = undefined;
    /**
    * volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.
    * @member {Array.<String>} volumes
    */
    volumes = undefined;








}


