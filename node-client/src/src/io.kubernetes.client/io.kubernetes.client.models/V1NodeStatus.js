/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import V1AttachedVolume from './V1AttachedVolume';
import V1ContainerImage from './V1ContainerImage';
import V1NodeAddress from './V1NodeAddress';
import V1NodeCondition from './V1NodeCondition';
import V1NodeDaemonEndpoints from './V1NodeDaemonEndpoints';
import V1NodeSystemInfo from './V1NodeSystemInfo';





/**
* The V1NodeStatus model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1NodeStatus
* @version 0.3-SNAPSHOT
*/
export default class V1NodeStatus {
    /**
    * Constructs a new <code>V1NodeStatus</code>.
    * NodeStatus is information about the current status of a node.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1NodeStatus
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>V1NodeStatus</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1NodeStatus} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1NodeStatus} The populated <code>V1NodeStatus</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1NodeStatus();

            
            
            

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [V1NodeAddress]);
            }
            if (data.hasOwnProperty('allocatable')) {
                obj['allocatable'] = ApiClient.convertToType(data['allocatable'], {'String': 'String'});
            }
            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], {'String': 'String'});
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [V1NodeCondition]);
            }
            if (data.hasOwnProperty('daemonEndpoints')) {
                obj['daemonEndpoints'] = V1NodeDaemonEndpoints.constructFromObject(data['daemonEndpoints']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [V1ContainerImage]);
            }
            if (data.hasOwnProperty('nodeInfo')) {
                obj['nodeInfo'] = V1NodeSystemInfo.constructFromObject(data['nodeInfo']);
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
            if (data.hasOwnProperty('volumesAttached')) {
                obj['volumesAttached'] = ApiClient.convertToType(data['volumesAttached'], [V1AttachedVolume]);
            }
            if (data.hasOwnProperty('volumesInUse')) {
                obj['volumesInUse'] = ApiClient.convertToType(data['volumesInUse'], ['String']);
            }
        }
        return obj;
    }

    /**
    * List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1NodeAddress>} addresses
    */
    addresses = undefined;
    /**
    * Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.
    * @member {Object.<String, String>} allocatable
    */
    allocatable = undefined;
    /**
    * Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
    * @member {Object.<String, String>} capacity
    */
    capacity = undefined;
    /**
    * Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1NodeCondition>} conditions
    */
    conditions = undefined;
    /**
    * Endpoints of daemons running on the Node.
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1NodeDaemonEndpoints} daemonEndpoints
    */
    daemonEndpoints = undefined;
    /**
    * List of container images on this node
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1ContainerImage>} images
    */
    images = undefined;
    /**
    * Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
    * @member {module:io.kubernetes.client/io.kubernetes.client.models/V1NodeSystemInfo} nodeInfo
    */
    nodeInfo = undefined;
    /**
    * NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.
    * @member {String} phase
    */
    phase = undefined;
    /**
    * List of volumes that are attached to the node.
    * @member {Array.<module:io.kubernetes.client/io.kubernetes.client.models/V1AttachedVolume>} volumesAttached
    */
    volumesAttached = undefined;
    /**
    * List of attachable volumes in use (mounted) by the node.
    * @member {Array.<String>} volumesInUse
    */
    volumesInUse = undefined;








}


