/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The V1APIResource model module.
* @module io.kubernetes.client/io.kubernetes.client.models/V1APIResource
* @version 0.3-SNAPSHOT
*/
export default class V1APIResource {
    /**
    * Constructs a new <code>V1APIResource</code>.
    * APIResource specifies the name of a resource and whether it is namespaced.
    * @alias module:io.kubernetes.client/io.kubernetes.client.models/V1APIResource
    * @class
    * @param kind {String} kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
    * @param name {String} name is the plural name of the resource.
    * @param namespaced {Boolean} namespaced indicates if a resource is namespaced or not.
    * @param singularName {String} singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
    * @param verbs {Array.<String>} verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
    */

    constructor(kind, name, namespaced, singularName, verbs) {
        

        
        

        this['kind'] = kind;this['name'] = name;this['namespaced'] = namespaced;this['singularName'] = singularName;this['verbs'] = verbs;

        
    }

    /**
    * Constructs a <code>V1APIResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1APIResource} obj Optional instance to populate.
    * @return {module:io.kubernetes.client/io.kubernetes.client.models/V1APIResource} The populated <code>V1APIResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1APIResource();

            
            
            

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespaced')) {
                obj['namespaced'] = ApiClient.convertToType(data['namespaced'], 'Boolean');
            }
            if (data.hasOwnProperty('shortNames')) {
                obj['shortNames'] = ApiClient.convertToType(data['shortNames'], ['String']);
            }
            if (data.hasOwnProperty('singularName')) {
                obj['singularName'] = ApiClient.convertToType(data['singularName'], 'String');
            }
            if (data.hasOwnProperty('verbs')) {
                obj['verbs'] = ApiClient.convertToType(data['verbs'], ['String']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
    * categories is a list of the grouped resources this resource belongs to (e.g. 'all')
    * @member {Array.<String>} categories
    */
    categories = undefined;
    /**
    * group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".
    * @member {String} group
    */
    group = undefined;
    /**
    * kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
    * @member {String} kind
    */
    kind = undefined;
    /**
    * name is the plural name of the resource.
    * @member {String} name
    */
    name = undefined;
    /**
    * namespaced indicates if a resource is namespaced or not.
    * @member {Boolean} namespaced
    */
    namespaced = undefined;
    /**
    * shortNames is a list of suggested short names of the resource.
    * @member {Array.<String>} shortNames
    */
    shortNames = undefined;
    /**
    * singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
    * @member {String} singularName
    */
    singularName = undefined;
    /**
    * verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
    * @member {Array.<String>} verbs
    */
    verbs = undefined;
    /**
    * version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".
    * @member {String} version
    */
    version = undefined;








}


