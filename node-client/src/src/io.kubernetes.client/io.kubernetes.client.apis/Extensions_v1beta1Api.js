/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExtensionsV1beta1Deployment from '../io.kubernetes.client.models/ExtensionsV1beta1Deployment';
import ExtensionsV1beta1DeploymentList from '../io.kubernetes.client.models/ExtensionsV1beta1DeploymentList';
import ExtensionsV1beta1DeploymentRollback from '../io.kubernetes.client.models/ExtensionsV1beta1DeploymentRollback';
import ExtensionsV1beta1PodSecurityPolicy from '../io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy';
import ExtensionsV1beta1PodSecurityPolicyList from '../io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicyList';
import ExtensionsV1beta1Scale from '../io.kubernetes.client.models/ExtensionsV1beta1Scale';
import V1APIResourceList from '../io.kubernetes.client.models/V1APIResourceList';
import V1DeleteOptions from '../io.kubernetes.client.models/V1DeleteOptions';
import V1Status from '../io.kubernetes.client.models/V1Status';
import V1beta1DaemonSet from '../io.kubernetes.client.models/V1beta1DaemonSet';
import V1beta1DaemonSetList from '../io.kubernetes.client.models/V1beta1DaemonSetList';
import V1beta1Ingress from '../io.kubernetes.client.models/V1beta1Ingress';
import V1beta1IngressList from '../io.kubernetes.client.models/V1beta1IngressList';
import V1beta1NetworkPolicy from '../io.kubernetes.client.models/V1beta1NetworkPolicy';
import V1beta1NetworkPolicyList from '../io.kubernetes.client.models/V1beta1NetworkPolicyList';
import V1beta1ReplicaSet from '../io.kubernetes.client.models/V1beta1ReplicaSet';
import V1beta1ReplicaSetList from '../io.kubernetes.client.models/V1beta1ReplicaSetList';

/**
* Extensions_v1beta1 service.
* @module io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api
* @version 0.3-SNAPSHOT
*/
export default class Extensions_v1beta1Api {

    /**
    * Constructs a new Extensions_v1beta1Api. 
    * @alias module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api
    * @class
    * @param {module:io.kubernetes.client/ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:io.kubernetes.client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    createNamespacedDaemonSet(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedDaemonSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedDaemonSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    createNamespacedDeployment(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedDeployment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedDeployment");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedDeploymentRollback operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDeploymentRollbackCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentRollback} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create rollback of a Deployment
     * @param {String} name name of the DeploymentRollback
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentRollback} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedDeploymentRollbackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentRollback}
     */
    createNamespacedDeploymentRollback(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling createNamespacedDeploymentRollback");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedDeploymentRollback");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedDeploymentRollback");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1DeploymentRollback;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create an Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    createNamespacedIngress(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedIngress");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedIngress");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy}
     */
    createNamespacedNetworkPolicy(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedNetworkPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedNetworkPolicy");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1NetworkPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    createNamespacedReplicaSet(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedReplicaSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedReplicaSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createPodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createPodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a PodSecurityPolicy
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~createPodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy}
     */
    createPodSecurityPolicy(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createPodSecurityPolicy");
      }


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1PodSecurityPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionNamespacedDaemonSet(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedDaemonSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionNamespacedDeployment(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedDeployment");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionNamespacedIngress(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedIngress");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionNamespacedNetworkPolicy(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedNetworkPolicy");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionNamespacedReplicaSet(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedReplicaSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionPodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionPodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of PodSecurityPolicy
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteCollectionPodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteCollectionPodSecurityPolicy(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteNamespacedDaemonSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedDaemonSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedDaemonSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedDaemonSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteNamespacedDeployment(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedDeployment");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedDeployment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedDeployment");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete an Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteNamespacedIngress(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedIngress");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedIngress");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedIngress");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a NetworkPolicy
     * @param {String} name name of the NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteNamespacedNetworkPolicy(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedNetworkPolicy");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedNetworkPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedNetworkPolicy");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deleteNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deleteNamespacedReplicaSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedReplicaSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedReplicaSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedReplicaSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deletePodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a PodSecurityPolicy
     * @param {String} name name of the PodSecurityPolicy
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: &#39;Orphan&#39; - orphan the dependents; &#39;Background&#39; - allow the garbage collector to delete the dependents in the background; &#39;Foreground&#39; - a cascading policy that deletes all dependents in the foreground.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~deletePodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1Status}
     */
    deletePodSecurityPolicy(name, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling deletePodSecurityPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling deletePodSecurityPolicy");
      }


      let pathParams = {
        'name': name
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAPIResources operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~getAPIResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1APIResourceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get available resources
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~getAPIResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1APIResourceList}
     */
    getAPIResources(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1APIResourceList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listDaemonSetForAllNamespaces operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listDaemonSetForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSetList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind DaemonSet
     * @param {Object} opts Optional parameters
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listDaemonSetForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSetList}
     */
    listDaemonSetForAllNamespaces(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1DaemonSetList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/daemonsets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listDeploymentForAllNamespaces operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listDeploymentForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Deployment
     * @param {Object} opts Optional parameters
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listDeploymentForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentList}
     */
    listDeploymentForAllNamespaces(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = ExtensionsV1beta1DeploymentList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/deployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listIngressForAllNamespaces operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listIngressForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1IngressList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Ingress
     * @param {Object} opts Optional parameters
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listIngressForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1IngressList}
     */
    listIngressForAllNamespaces(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1IngressList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/ingresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSetList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSetList}
     */
    listNamespacedDaemonSet(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedDaemonSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1DaemonSetList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1DeploymentList}
     */
    listNamespacedDeployment(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedDeployment");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = ExtensionsV1beta1DeploymentList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1IngressList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1IngressList}
     */
    listNamespacedIngress(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedIngress");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1IngressList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicyList}
     */
    listNamespacedNetworkPolicy(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedNetworkPolicy");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1NetworkPolicyList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSetList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSetList}
     */
    listNamespacedReplicaSet(namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedReplicaSet");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1ReplicaSetList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNetworkPolicyForAllNamespaces operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNetworkPolicyForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind NetworkPolicy
     * @param {Object} opts Optional parameters
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listNetworkPolicyForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicyList}
     */
    listNetworkPolicyForAllNamespaces(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1NetworkPolicyList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/networkpolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listPodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listPodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind PodSecurityPolicy
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listPodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicyList}
     */
    listPodSecurityPolicy(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = ExtensionsV1beta1PodSecurityPolicyList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listReplicaSetForAllNamespaces operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listReplicaSetForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSetList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind ReplicaSet
     * @param {Object} opts Optional parameters
     * @param {String} opts._continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {Boolean} opts.includeUninitialized If true, partially initialized resources are included in the response.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {Number} opts.limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~listReplicaSetForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSetList}
     */
    listReplicaSetForAllNamespaces(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'continue': opts['_continue'],
        'fieldSelector': opts['fieldSelector'],
        'includeUninitialized': opts['includeUninitialized'],
        'labelSelector': opts['labelSelector'],
        'limit': opts['limit'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      let returnType = V1beta1ReplicaSetList;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/replicasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    patchNamespacedDaemonSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedDaemonSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedDaemonSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedDaemonSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedDaemonSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDaemonSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update status of the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDaemonSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    patchNamespacedDaemonSetStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedDaemonSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedDaemonSetStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedDaemonSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    patchNamespacedDeployment(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedDeployment");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedDeployment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedDeployment");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedDeploymentScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update scale of the specified Deployment
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    patchNamespacedDeploymentScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedDeploymentScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedDeploymentScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedDeploymentScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedDeploymentStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update status of the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedDeploymentStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    patchNamespacedDeploymentStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedDeploymentStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedDeploymentStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedDeploymentStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    patchNamespacedIngress(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedIngress");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedIngress");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedIngress");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedIngressStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedIngressStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update status of the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedIngressStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    patchNamespacedIngressStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedIngressStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedIngressStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedIngressStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified NetworkPolicy
     * @param {String} name name of the NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy}
     */
    patchNamespacedNetworkPolicy(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedNetworkPolicy");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedNetworkPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedNetworkPolicy");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1NetworkPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    patchNamespacedReplicaSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedReplicaSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedReplicaSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedReplicaSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedReplicaSetScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update scale of the specified ReplicaSet
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    patchNamespacedReplicaSetScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedReplicaSetScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedReplicaSetScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedReplicaSetScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedReplicaSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update status of the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicaSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    patchNamespacedReplicaSetStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedReplicaSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedReplicaSetStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedReplicaSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedReplicationControllerDummyScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicationControllerDummyScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update scale of the specified ReplicationControllerDummy
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchNamespacedReplicationControllerDummyScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    patchNamespacedReplicationControllerDummyScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedReplicationControllerDummyScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedReplicationControllerDummyScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedReplicationControllerDummyScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchPodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchPodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified PodSecurityPolicy
     * @param {String} name name of the PodSecurityPolicy
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~patchPodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy}
     */
    patchPodSecurityPolicy(name, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchPodSecurityPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchPodSecurityPolicy");
      }


      let pathParams = {
        'name': name
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1PodSecurityPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    readNamespacedDaemonSet(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedDaemonSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedDaemonSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedDaemonSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDaemonSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read status of the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDaemonSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    readNamespacedDaemonSetStatus(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedDaemonSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedDaemonSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    readNamespacedDeployment(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedDeployment");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedDeployment");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedDeploymentScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read scale of the specified Deployment
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    readNamespacedDeploymentScale(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedDeploymentScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedDeploymentScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedDeploymentStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read status of the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedDeploymentStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    readNamespacedDeploymentStatus(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedDeploymentStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedDeploymentStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    readNamespacedIngress(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedIngress");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedIngress");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedIngressStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedIngressStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read status of the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedIngressStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    readNamespacedIngressStatus(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedIngressStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedIngressStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified NetworkPolicy
     * @param {String} name name of the NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy}
     */
    readNamespacedNetworkPolicy(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedNetworkPolicy");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedNetworkPolicy");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1NetworkPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    readNamespacedReplicaSet(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedReplicaSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedReplicaSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedReplicaSetScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read scale of the specified ReplicaSet
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    readNamespacedReplicaSetScale(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedReplicaSetScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedReplicaSetScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedReplicaSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read status of the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicaSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    readNamespacedReplicaSetStatus(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedReplicaSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedReplicaSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedReplicationControllerDummyScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicationControllerDummyScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read scale of the specified ReplicationControllerDummy
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readNamespacedReplicationControllerDummyScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    readNamespacedReplicationControllerDummyScale(name, namespace, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedReplicationControllerDummyScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedReplicationControllerDummyScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readPodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readPodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified PodSecurityPolicy
     * @param {String} name name of the PodSecurityPolicy
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Boolean} opts.exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
     * @param {Boolean} opts._export Should this value be exported.  Export strips fields that a user can not specify.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~readPodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy}
     */
    readPodSecurityPolicy(name, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling readPodSecurityPolicy");
      }


      let pathParams = {
        'name': name
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'exact': opts['exact'],
        'export': opts['_export']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1PodSecurityPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedDaemonSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDaemonSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDaemonSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    replaceNamespacedDaemonSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedDaemonSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedDaemonSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedDaemonSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedDaemonSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDaemonSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace status of the specified DaemonSet
     * @param {String} name name of the DaemonSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDaemonSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1DaemonSet}
     */
    replaceNamespacedDaemonSetStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedDaemonSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedDaemonSetStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedDaemonSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1DaemonSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedDeployment operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    replaceNamespacedDeployment(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedDeployment");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedDeployment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedDeployment");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedDeploymentScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace scale of the specified Deployment
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    replaceNamespacedDeploymentScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedDeploymentScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedDeploymentScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedDeploymentScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedDeploymentStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace status of the specified Deployment
     * @param {String} name name of the Deployment
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedDeploymentStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Deployment}
     */
    replaceNamespacedDeploymentStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedDeploymentStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedDeploymentStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedDeploymentStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Deployment;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedIngress operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedIngressCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedIngressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    replaceNamespacedIngress(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedIngress");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedIngress");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedIngress");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedIngressStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedIngressStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace status of the specified Ingress
     * @param {String} name name of the Ingress
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedIngressStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1Ingress}
     */
    replaceNamespacedIngressStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedIngressStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedIngressStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedIngressStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1Ingress;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedNetworkPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedNetworkPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified NetworkPolicy
     * @param {String} name name of the NetworkPolicy
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedNetworkPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1NetworkPolicy}
     */
    replaceNamespacedNetworkPolicy(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedNetworkPolicy");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedNetworkPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedNetworkPolicy");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1NetworkPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedReplicaSet operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    replaceNamespacedReplicaSet(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedReplicaSet");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedReplicaSet");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedReplicaSet");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedReplicaSetScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace scale of the specified ReplicaSet
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    replaceNamespacedReplicaSetScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedReplicaSetScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedReplicaSetScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedReplicaSetScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedReplicaSetStatus operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace status of the specified ReplicaSet
     * @param {String} name name of the ReplicaSet
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicaSetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/V1beta1ReplicaSet}
     */
    replaceNamespacedReplicaSetStatus(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedReplicaSetStatus");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedReplicaSetStatus");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedReplicaSetStatus");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = V1beta1ReplicaSet;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedReplicationControllerDummyScale operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicationControllerDummyScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace scale of the specified ReplicationControllerDummy
     * @param {String} name name of the Scale
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replaceNamespacedReplicationControllerDummyScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1Scale}
     */
    replaceNamespacedReplicationControllerDummyScale(name, namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedReplicationControllerDummyScale");
      }

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedReplicationControllerDummyScale");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedReplicationControllerDummyScale");
      }


      let pathParams = {
        'name': name,
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1Scale;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replacePodSecurityPolicy operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replacePodSecurityPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified PodSecurityPolicy
     * @param {String} name name of the PodSecurityPolicy
     * @param {module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/Extensions_v1beta1Api~replacePodSecurityPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.client/io.kubernetes.client.models/ExtensionsV1beta1PodSecurityPolicy}
     */
    replacePodSecurityPolicy(name, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling replacePodSecurityPolicy");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling replacePodSecurityPolicy");
      }


      let pathParams = {
        'name': name
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = ExtensionsV1beta1PodSecurityPolicy;

      return this.apiClient.callApi(
        '/apis/extensions/v1beta1/podsecuritypolicies/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}
