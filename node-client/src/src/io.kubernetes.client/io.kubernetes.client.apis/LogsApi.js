/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Logs service.
* @module io.kubernetes.client/io.kubernetes.client.apis/LogsApi
* @version 0.3-SNAPSHOT
*/
export default class LogsApi {

    /**
    * Constructs a new LogsApi. 
    * @alias module:io.kubernetes.client/io.kubernetes.client.apis/LogsApi
    * @class
    * @param {module:io.kubernetes.client/ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:io.kubernetes.client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the logFileHandler operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/LogsApi~logFileHandlerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} logpath path to the log
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/LogsApi~logFileHandlerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    logFileHandler(logpath, callback) {
      let postBody = null;

      // verify the required parameter 'logpath' is set
      if (logpath === undefined || logpath === null) {
        throw new Error("Missing the required parameter 'logpath' when calling logFileHandler");
      }


      let pathParams = {
        'logpath': logpath
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/logs/{logpath}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logFileListHandler operation.
     * @callback module:io.kubernetes.client/io.kubernetes.client.apis/LogsApi~logFileListHandlerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:io.kubernetes.client/io.kubernetes.client.apis/LogsApi~logFileListHandlerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    logFileListHandler(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/logs/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}
